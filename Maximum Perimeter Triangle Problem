#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'maximumPerimeterTriangle' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY sticks as parameter.
#

def maximumPerimeterTriangle(sticks):
    max1 = 0
    max2 = 0 
    max3 = 0
    maxList = [0,0,0]
    for a in range(0,len(sticks)-2):
        for b in range(a+1,len(sticks)-1):
            for c in range(b+1,len(sticks)):
                if isValidTriangle(sticks[a],sticks[b],sticks[c]) and sticks[a]+sticks[b]+sticks[c]>maxList[0]+maxList[1]+maxList[2]:
                    maxList=[sticks[a],sticks[b],sticks[c]]
                    print(sorted(maxList))
    if maxList==[0,0,0]: return[-1]
    return sorted(maxList)
                    
    
        

    
    
def isValidTriangle(a,b,c):
    if a+b>c and b+c>a and c+a>b:
        return True
    else:
        return False    
    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    sticks = list(map(int, input().rstrip().split()))

    result = maximumPerimeterTriangle(sticks)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
